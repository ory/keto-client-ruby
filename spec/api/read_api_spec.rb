=begin
#ORY Keto

#Ory Keto is a cloud native access control server providing best-practice patterns (RBAC, ABAC, ACL, AWS IAM Policies, Kubernetes Roles, ...) via REST APIs.

The version of the OpenAPI document: v0.7.0-alpha.0
Contact: hi@ory.sh
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OryKetoClient::ReadApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReadApi' do
  before do
    # run before each test
    @api_instance = OryKetoClient::ReadApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReadApi' do
    it 'should create an instance of ReadApi' do
      expect(@api_instance).to be_instance_of(OryKetoClient::ReadApi)
    end
  end

  # unit tests for get_check
  # Check a relation tuple
  # To learn how relation tuples and the check works, head over to [the documentation](../concepts/relation-tuples.mdx).
  # @param namespace Namespace of the Relation Tuple
  # @param object Object of the Relation Tuple
  # @param relation Relation of the Relation Tuple
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subject_id SubjectID of the Relation Tuple
  # @option opts [String] :subject_set_namespace Namespace of the Subject Set
  # @option opts [String] :subject_set_object Object of the Subject Set
  # @option opts [String] :subject_set_relation Relation of the Subject Set
  # @return [GetCheckResponse]
  describe 'get_check test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_expand
  # Expand a Relation Tuple
  # Use this endpoint to expand a relation tuple.
  # @param namespace Namespace of the Subject Set
  # @param object Object of the Subject Set
  # @param relation Relation of the Subject Set
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :max_depth 
  # @return [ExpandTree]
  describe 'get_expand test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_relation_tuples
  # Query relation tuples
  # Get all relation tuples that match the query. Only the namespace field is required.
  # @param namespace Namespace of the Relation Tuple
  # @param object Object of the Relation Tuple
  # @param relation Relation of the Relation Tuple
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subject_id SubjectID of the Relation Tuple
  # @option opts [String] :subject_set_namespace Namespace of the Subject Set
  # @option opts [String] :subject_set_object Object of the Subject Set
  # @option opts [String] :subject_set_relation Relation of the Subject Set
  # @option opts [String] :page_token 
  # @option opts [Integer] :page_size 
  # @return [GetRelationTuplesResponse]
  describe 'get_relation_tuples test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_check
  # Check a relation tuple
  # To learn how relation tuples and the check works, head over to [the documentation](../concepts/relation-tuples.mdx).
  # @param [Hash] opts the optional parameters
  # @option opts [RelationQuery] :payload 
  # @return [GetCheckResponse]
  describe 'post_check test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
